#!/usr/bin/env bash
###############################################################################
# Filename   : popup                                                          #
# Author     : Michael DeBusk (https://gitlab.com/mdebusk/)                   #
# Created    : 2023-01-22 20:19                                               #
# Last edit  : 2024-03-02 17:57                                               #
# Purpose    : Hoping to replace a status bar, for the most part              #
# Depends    : date, fastfetch, notify-send, bash, weather, on_ac_power,      #
#            : iwgetid, hostname                                              #
# Arguments  : -b -c -d -h -s -w -t                                           #
# Known bugs : NKA                                                            #
# TODO       : This tool is meant to be invoked from a keyboard               #
#            : combination in i3, but it might be nice to have it             #
#            : show a menu if invoked from the command line                   #
###############################################################################


# ** Notes {{{
###############################################################################
# The part of this program that displays the phase of the moon wants          #
# an icon set with the icons named exactly after each moon phase. I           #
# have these icons in $XDG_DATA_HOME/icons/Moon. The icons are named as       #
# follows:                                                                    #
#                                                                             #
# - "First Quarter.png"                                                       #
# - "Full Moon.png"                                                           #
# - "Last Quarter.png"                                                        #
# - "New Moon.png"                                                            #
# - "Undetermined.png"                                                        #
# - "Waning Crescent.png"                                                     #
# - "Waning Gibbous.png"                                                      #
# - "Waxing Crescent.png"                                                     #
# - "Waxing Gibbous.png"                                                      #
###############################################################################
# End notes }}}


# ** License {{{
###############################################################################
# This is free and unencumbered software released into the public domain.     #
#                                                                             #
# Anyone is free to copy, modify, publish, use, compile, sell, or             #
# distribute this software, either in source code form or as a compiled       #
# binary, for any purpose, commercial or non-commercial, and by any means.    #
#                                                                             #
# In jurisdictions that recognize copyright laws, the author or authors of    #
# this software dedicate any and all copyright interest in the software to    #
# the public domain. We make this dedication for the benefit of the public    #
# at large and to the detriment of our heirs and successors. We intend        #
# this dedication to be an overt act of relinquishment in perpetuity of       #
# all present and future rights to this software under copyright law.         #
#                                                                             #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,             #
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF          #
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.      #
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER     #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     #
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         #
# DEALINGS IN THE SOFTWARE.                                                   #
#                                                                             #
# For more information, please refer to <http://unlicense.org/>               #
###############################################################################
# End license }}}


# ** Functions {{{1
# *** Battery status {{{
battery_status() {
    power_source=$(on_ac_power ; [[ $? -eq 0 ]] && echo "On A/C Power" || echo "On Battery Power")
    bat_stat=$(echo $(</sys/class/power_supply/BAT0/capacity))
    notify-send -t 3500\
        "$power_source" "Battery level: $bat_stat%"\
        -i preferences-system-power-symbolic
}
# End battery }}}


# *** Moon {{{2
get_moon_phase() {
    # Calculate moon phase
    local lunar_month=2551443
    local day_length=86400
    local now=$(date '+%s')
    local new_moon=1707519540 # On 2024-02-09T17:59
    local phase=$((($now - $new_moon) % $lunar_month))
    local phase_number=$((((phase / day_length) + 1)*100000))

    # Multiply by 100000 so that we can do integer comparison in bash.
    if   [ $phase_number -lt 184566 ];  then phase="New Moon"
    elif [ $phase_number -lt 553699 ];  then phase="Waxing Crescent"
    elif [ $phase_number -lt 922831 ];  then phase="First Quarter"
    elif [ $phase_number -lt 1291963 ]; then phase="Waxing Gibbous"
    elif [ $phase_number -lt 1661096 ]; then phase="Full Moon"
    elif [ $phase_number -lt 2030228 ]; then phase="Waning Gibbous"
    elif [ $phase_number -lt 2399361 ]; then phase="Last Quarter"
    elif [ $phase_number -lt 2768493 ]; then phase="Waning Crescent"
    else
        phase="Undetermined"
    fi

    # Echo the current Moon Phase Icon, name, and day number
    echo $phase
}

show_moon_phase() {
    phase="$(get_moon_phase)"
    icn=$XDG_DATA_HOME/icons/Moon/$phase.png
    notify-send -t 3500\
        "Moon Phase" "$phase"\
        -i "$icn"
    } # }}}


# *** Weather {{{2
show_weather() {
# Icons can be found at # /usr/share/icons/Yaru/scalable/
    notify-send -t 6000\
        "Weather in Aberdeen, MD" "$(weather)"\
        -i weather-app-symbolic
    } # }}}


# *** Date and Time {{{2
date_and_time() {
    notify-send -t 5000\
        "Date, Day, and Time" "$(date '+%F (%A) %R')"\
        -i calendar-app-symbolic
    } # }}}


# *** SysInfo {{{2
system_details() {
    notify-send\
        "System Status"\
        "$(fastfetch -c "$XDG_CONFIG_HOME"/fastfetch/plain.jsonc)"\
        -i dialog-information-symbolic
    } # }}}


# *** To Do List {{{2
todo_list() {
    notify-send\
        "To Do"\
        "$(python ~/Source/t/t.py --task-dir "$XDG_DATA_HOME"/tasks --list tasks)"\
        -i checkbox-checked-symbolic
    } # }}}


# *** Wireless {{{2
wireless_info() {
    echo "Network SSID : $(iwgetid | awk -F '"' '{ print $2 }')"
    echo "Internal IP Address : $(hostname -I)"
    echo "External IP Address : $(curl -s https://ifconfig.co)"
    awk 'NR==3 {printf("WiFi Signal Strength : %.0f%%\n",$3*10/7)}'\
        /proc/net/wireless
}


show_wireless_info() {
    notify-send\
        "Wireless"\
        "$(wireless_info)"\
        -i network-wireless-symbolic
    } # }}}


# *** Help {{{2
help_screen() {
    cat <<- EOF
	usage: popup [OPTION]
	    -b    battery status
	    -c    wireless connection info
	    -d    date and time
	    -h    this help screen
	    -m    current phase of the moon
	    -s    system information
	    -w    weather
	    -t    todo list
	
	EOF
} # }}}
# End functions }}}


[[ $# -eq 0 ]] && ( help_screen ; exit 0 ; )

while getopts "bcdhmstw" option; do
    case $option in
        b) battery_status
            exit ;;
        c) show_wireless_info
            exit;;
        d) date_and_time
            exit;;
        h) help_screen
            exit;;
        m) show_moon_phase
            exit;;
        s) system_details
            exit;;
        t) todo_list
            exit;;
        w) show_weather
            exit;;
        *) # incorrect option
            echo "Error: Invalid option"
            exit;;
    esac
done

